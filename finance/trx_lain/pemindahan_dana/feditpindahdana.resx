<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHBgkIBwgKCgkLDRYPDQwMDRsUFRAWIB0iIiAdHx8k
        KDQsJCYxJx8fLT0tMTU3Ojo6Iys/RD84QzQ5Ojf/2wBDAQoKCg0MDRoPDxo3JR8lNzc3Nzc3Nzc3Nzc3
        Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzf/wAARCABcAFwDAREAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAYHAgMEAQX/xAA7EAABAwICBQcKBQUAAAAAAAABAAIDBAURIQYSMUFR
        FmFxcpOx0QcjMjRUc4GywfEiM1Ph8BMUYpGh/8QAGgEBAAIDAQAAAAAAAAAAAAAAAAEFAgMGBP/EAC4R
        AAIBAwEGBAUFAAAAAAAAAAABAgMEETEFEhMhMlFBUnHBFBUzofA0QmFigf/aAAwDAQACEQMRAD8AvFAE
        BrqCW08rmnAhhIPwRkrUqcaQ3RrWg1tSTqjEmV2eS8bqS7nTuzt0+hDlFc/bKjtneKjiS7kfB2/kR5yi
        untlR2zvFOJLuT8Hb+RDlFdPbKjtneKcSXcfB2/kQ5RXP2yo7Z3inEl3J+Ct/IiZaB3CqroKr+6mklwk
        GrruxwGqMl6KUm1zKbaNOFOqlBY5ErW0rwgCAIAgNVX6rN1HdyMlalJu3dVvcFXs7CWp4hAUGWDxBgIS
        T3yb/kVfvB8oXqodJz+1frL09ybLeVgQBAEAQGqr9Vm6ju5QyVqUm7d1W9wXgep2MtTFQMBCQhJ4oJJ9
        5NvyKv3g+UL10Ok53av1l6e5NlvKwIAgCAIDVV+qzdR3coZK1KTdu6re4LwPU7N6mKgBQDxCQSBtICGS
        RPvJqQaerwOPnB8oXrodJzm1vrr092TZbyrCAIAgCA1Vfqs3Ud3KGStSkJ5Y4Wh0rw0ardvQFXyeDtVF
        yfI+dNdWDKFhdzuyCwczfG3f7mcr7hUv2PDR/iFjvM2qjBeBqMkj/TkeelxWOTYopaI8AQyLW8kuVuqv
        ej5Qvfa9ByG3P1K9Pdk/XpKYIAgOC73amtEUc1Z/UEb36gcyMuAO7HDYsZSUdTbRoTrS3Yany+Wtl/Wk
        7MrDiwPX8suvL9zXUaZ2Z8EjWzSYuYQPNngnFj3C2ZdZ6fuilLnibhLicdXADPEbAq6fUztKXQjQAsTM
        zAQkzAQGQCAsLyfXqis9DM2tc9pkeHN1W45YAfRe23nGMeZzW1bOtXr71NZWCW8tLN+rL2RW7jQ7lZ8r
        uvL90dFBpPbbhVspaZ0zpHgkeaOAA3k7llGpGTwjTWsq1GO9NY/1H2lmeU01lLDWU0lPUxtkikbqua4Y
        ghGs8mTGTi1JaopLTjQ+WyVZmgaZKWQnUdhieg8/f04qvrUd15Wh12zdpKvHcn1L8/OxE2tHMvOXBtaE
        BmAhJsAQGYCAzAUAyDeZAdlut8tdUMhgjL3OOTRlj8dw4n64BZwpubwjzXV1C2pucmXBoto9DZqUEgOn
        cBrvwwx6OA4D91ZwgoLCOIubmdxPfkffWZ5wgOa4UUFwpJKaqjD4pBgQVDSawzKE5QkpRfNFJaZaLVFi
        rnEAvp5CTHJh6Q5+BHDftG8CvrUnB58DsNnbQjcQ3ZdSI60LQWpmAhJsAQGxoUAzAQHVQ0ctZOyKJjnO
        ccABtJ/m/cs4Qc3hGi5uIW8HObLc0T0bitNOJJAHVDx+J2GzmHN91ZU6agsI4i7u53NTelp4EkWw8oQB
        AEByXS3U10o30tXGHxuHxB3EHcVDSksMzp1JU5KcXhopLSrRuosNaWPBdC7NkgGThx6eI+myuq0nBnZ7
        Pv43UMPqR8QLSWRsaEBsaFAOmkpn1MrY42lxcQ0BoxJPAc/3WUYuTwjVWrQowc5MtjRDRllsgbPUNaah
        w3bGjgPHf/wWdKmqaOJvb2d1PL08CVLYeIIAgCAIAgOC82qmu9E+mqm4g5tcNrTuI51jKKksM2Uqs6U1
        OD5lKaRWKpslc6GZv4drXDY4cR4bv9E11Wm4M7WwvoXUM+J8xq0nvOimgfPIGMBJJwyGJ+6yjFyeEa6t
        WNKDnJ8i1dDdF2W+NtVVtBncMht1Bw8Tv6MFZUqSgv5OLv76V1P+qJhsW0rwgCAIAgCAIAgPmX6zU16o
        XU9QMCM2SD0mO4j+ZjJYzipLDN1CvOhNTgU1drHVWu4OpZ2YHHIgEhw3FvHHhtxy6a6dJxlg7O2v6Val
        xM6alg6FaKto2MrK1nniPwsOep+/26fbRpbi56nM7Q2hK5lhdKJsBgMAtxWHqAIAgCAIAgCAIAgOSroK
        WqlhlngY+SI4xuc0Et6DuUYMlKSTSep1NAaABsCkxPUAQBAEAQH/2Q==
</value>
  </data>
</root>